{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2455j\\\\Desktop\\\\study\\\\react\\\\first-react\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Subject from './components/Subject';\nimport TOC from './components/TOC';\nimport Content from './components/Content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // App 컴포넌트의 State 초기화\n      subject: {\n        title: 'WEB',\n        sub: 'World Wide Web!'\n      },\n      mode: 'welcome',\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      selected_content_id: 2,\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'HTML is ...'\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'CSS is ...'\n      }, {\n        id: 3,\n        title: 'Javascript',\n        desc: 'Javascript is ...'\n      }]\n    };\n  }\n\n  render() {\n    var _title,\n        _desc = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n    } else if (this.state.mode === 'read') {\n      var i = 0;\n\n      while (i < this.state.contents.length) {\n        var data = this.state.contents[i];\n\n        if (data.id === this.state.selected_content_id) {\n          _title = data.title;\n          _desc = data.dese;\n        }\n\n        i = i + 1;\n      }\n\n      _title = this.state.contents[0].title;\n      _desc = this.state.contents[0].desc;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Subject, {\n        title: this.state.subject.title,\n        sub: this.state.subject.sub,\n        onChangePage: function () {\n          this.setState({\n            // bind를 사용해 현재 App컴포넌트가 this라는 것을 주입해줌\n            mode: 'welcome' // 이벤트에서 state의 상태를 바꿀때는 setState를 사용\n\n          });\n        }.bind(this) // onChangePage라는 이벤트에 함수 만듦\n        // 이벤트가 발생되었을 때(링크클릭) subject.js에 Props로 전달된 onChangePage를 호출\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TOC, {\n        onChangePage: function () {\n          this.setState({\n            // bind를 사용해 현재 App컴포넌트가 this라는 것을 주입해줌\n            mode: 'read' // 이벤트에서 state의 상태를 바꿀때는 setState를 사용\n\n          });\n        }.bind(this),\n        data: this.state.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/2455j/Desktop/study/react/first-react/src/App.js"],"names":["React","Component","Subject","TOC","Content","App","constructor","props","state","subject","title","sub","mode","welcome","desc","selected_content_id","contents","id","render","_title","_desc","i","length","data","dese","setState","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Subject from './components/Subject'\nimport TOC from './components/TOC'\nimport Content from './components/Content'\n\nclass App extends Component {\n  constructor(props){ \n    super(props);\n    this.state={ // App 컴포넌트의 State 초기화\n      subject:{title:'WEB', sub:'World Wide Web!'},\n\n      mode:'welcome',\n      welcome:{title:'Welcome', desc:'Hello, React!!'},\n      selected_content_id:2,\n      contents:[\n        {id:1, title:'HTML', desc:'HTML is ...'},\n        {id:2, title:'CSS', desc:'CSS is ...'},\n        {id:3, title:'Javascript', desc:'Javascript is ...'}\n      ]\n    }\n  }\n  render(){\n    var _title, _desc = null;\n    if(this.state.mode === 'welcome'){\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n    } else if(this.state.mode === 'read'){\n      var i = 0;\n      while(i < this.state.contents.length){\n        var data = this.state.contents[i];\n        if(data.id === this.state.selected_content_id){\n          _title = data.title;\n          _desc = data.dese;\n        }\n        i = i + 1;\n      }\n      _title = this.state.contents[0].title;\n      _desc = this.state.contents[0].desc;      \n    }\n    return(\n      <div className=\"App\">\n        {/* 상위 컴포넌트의 상태를 하위 컴포넌트에 전달 = 상위 state값을 하위의 props로 전달  */}\n        <Subject \n          title={this.state.subject.title} \n          sub={this.state.subject.sub}\n          onChangePage = {function(){\n            this.setState({ // bind를 사용해 현재 App컴포넌트가 this라는 것을 주입해줌\n              mode:'welcome'// 이벤트에서 state의 상태를 바꿀때는 setState를 사용\n            })\n          }.bind(this)} // onChangePage라는 이벤트에 함수 만듦\n                        // 이벤트가 발생되었을 때(링크클릭) subject.js에 Props로 전달된 onChangePage를 호출\n        >\n        </Subject>\n        <TOC \n          onChangePage = {function(){\n            this.setState({ // bind를 사용해 현재 App컴포넌트가 this라는 것을 주입해줌\n              mode:'read'// 이벤트에서 state의 상태를 바꿀때는 setState를 사용\n            })\n          }.bind(this)}\n          data={this.state.contents}></TOC>\n        <Content title={_title} desc={_desc}></Content>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}